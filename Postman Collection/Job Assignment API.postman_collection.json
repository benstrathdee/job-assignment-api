{
	"info": {
		"_postman_id": "0d5d3a5a-782e-4444-8102-c155bc4442e9",
		"name": "Job Assignment API",
		"description": "## Summary\n\nYour task is to build a Resourcing API using the Java Spring Boot framework, that allows consumers to assign temps to jobs.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21624819"
	},
	"item": [
		{
			"name": "Temps",
			"item": [
				{
					"name": "Create a temp",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstName\": \"Chris\",\r\n    \"lastName\": \"test\",\r\n    \"managerId\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/temps",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"temps"
							]
						},
						"description": "Creates a new temp"
					},
					"response": []
				},
				{
					"name": "List all temps",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/temps",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"temps"
							]
						},
						"description": "Get a list of all temps"
					},
					"response": []
				},
				{
					"name": "Get a temp by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/temps/20",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"temps",
								"20"
							]
						},
						"description": "Get a specific temp by tempId"
					},
					"response": []
				},
				{
					"name": "Get temps available for job",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/temps?jobId=3",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"temps"
							],
							"query": [
								{
									"key": "jobId",
									"value": "3"
								}
							]
						},
						"description": "Get a list of temps available for the timeframe of the job specified by jobId"
					},
					"response": []
				},
				{
					"name": "Get hierarchy tree",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{BASE_URL}}/temps/tree",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"temps",
								"tree"
							]
						},
						"description": "Get a full hierarchy tree representing the nested set of temps"
					},
					"response": []
				}
			],
			"description": "Temps who can have multiple jobs assigned at one time as long as their timeframes do not conflict. Can manage other temps.",
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Jobs",
			"item": [
				{
					"name": "Create a job",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const xsrfCookie = postman.getResponseCookie(\"XSRF-TOKEN\");\r",
									"pm.collectionVariables.set(\"XSRF_TOKEN\", xsrfCookie.value);\r",
									"console.log(\"Saved XSRF_TOKEN variable\")\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF_TOKEN}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"job9\",\r\n    \"startDate\": 1,\r\n    \"endDate\": 4,\r\n    \"tempId\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/jobs",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"jobs"
							]
						},
						"description": "Create a new job"
					},
					"response": []
				},
				{
					"name": "Patch a job",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF_TOKEN}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"tempId\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/jobs/1",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"jobs",
								"1"
							]
						},
						"description": "Edit an existing job - used to assigne temps"
					},
					"response": []
				},
				{
					"name": "List all jobs",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/jobs",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"jobs"
							]
						},
						"description": "Get a list of all temps"
					},
					"response": []
				},
				{
					"name": "Get a job by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/jobs/20",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"jobs",
								"20"
							]
						},
						"description": "Get a specific job by jobId"
					},
					"response": []
				},
				{
					"name": "List assigned jobs",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/jobs?assigned=true",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"jobs"
							],
							"query": [
								{
									"key": "assigned",
									"value": "true"
								}
							]
						},
						"description": "Get a list of jobs that have an assigned temp"
					},
					"response": []
				},
				{
					"name": "List unassigned jobs",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/jobs?assigned=false",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"jobs"
							],
							"query": [
								{
									"key": "assigned",
									"value": "false"
								}
							]
						},
						"description": "StartFragment\n\nGet a list of jobs that do not have an assigned temp"
					},
					"response": []
				}
			],
			"description": "Jobs can be unassigned or have one temp assigned",
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Auth",
			"item": [
				{
					"name": "Admin Log in",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const xsrfCookie = postman.getResponseCookie(\"XSRF-TOKEN\");\r",
									"pm.collectionVariables.set(\"XSRF_TOKEN\", xsrfCookie.value);\r",
									"console.log(\"Saved XSRF_TOKEN variable\")\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"{{ADMIN_USER}}\",\r\n    \"password\": \"{{ADMIN_PASSWORD}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/auth/login",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "User Log in",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"{{USER_USER}}\",\r\n    \"password\": \"{{USER_PASSWORD}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/auth/login",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"testBadEmail2\",\r\n    \"email\": \"tes2t@test.test\",\r\n    \"password\": \"test\",\r\n    \"valid\" : \"no\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/auth/register",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Log out",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/auth/logout",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"auth",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "Refresh Tokens",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/auth/refresh",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"auth",
								"refresh"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"const xsrfCookie = postman.getResponseCookie(\"XSRF-TOKEN\");",
					"pm.collectionVariables.set(\"XSRF_TOKEN\", xsrfCookie.value);",
					"console.log(\"Saved XSRF_TOKEN variable\")",
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "BASE_URL",
			"value": "localhost:8080",
			"type": "string"
		},
		{
			"key": "ADMIN_USER",
			"value": "user",
			"type": "string"
		},
		{
			"key": "ADMIN_PASSWORD",
			"value": "password",
			"type": "string"
		},
		{
			"key": "USER_USER",
			"value": "clairetest",
			"type": "string"
		},
		{
			"key": "USER_PASSWORD",
			"value": "password",
			"type": "string"
		},
		{
			"key": "XSRF_TOKEN",
			"value": ""
		}
	]
}